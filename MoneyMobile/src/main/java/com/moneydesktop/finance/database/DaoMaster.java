package main.java.com.moneydesktop.finance.database;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
import de.greenrobot.dao.AbstractDaoMaster;
import de.greenrobot.dao.identityscope.IdentityScopeType;

import main.java.com.moneydesktop.finance.database.BusinessObjectBaseDao;
import main.java.com.moneydesktop.finance.database.TagDao;
import main.java.com.moneydesktop.finance.database.TagInstanceDao;
import main.java.com.moneydesktop.finance.database.BankAccountBalanceDao;
import main.java.com.moneydesktop.finance.database.InstitutionDao;
import main.java.com.moneydesktop.finance.database.BankDao;
import main.java.com.moneydesktop.finance.database.BankAccountDao;
import main.java.com.moneydesktop.finance.database.AccountTypeDao;
import main.java.com.moneydesktop.finance.database.AccountTypeGroupDao;
import main.java.com.moneydesktop.finance.database.CategoryTypeDao;
import main.java.com.moneydesktop.finance.database.CategoryDao;
import main.java.com.moneydesktop.finance.database.TransactionsDao;
import main.java.com.moneydesktop.finance.database.BudgetItemDao;
import main.java.com.moneydesktop.finance.database.LocationDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/**
 * Master of DAO (schema version 1): knows all DAOs.
*/
public class DaoMaster extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 1;

    /** Creates underlying database table using DAOs. */
    public static void createAllTables(SQLiteDatabase db, boolean ifNotExists) {
        BusinessObjectBaseDao.createTable(db, ifNotExists);
        TagDao.createTable(db, ifNotExists);
        TagInstanceDao.createTable(db, ifNotExists);
        BankAccountBalanceDao.createTable(db, ifNotExists);
        InstitutionDao.createTable(db, ifNotExists);
        BankDao.createTable(db, ifNotExists);
        BankAccountDao.createTable(db, ifNotExists);
        AccountTypeDao.createTable(db, ifNotExists);
        AccountTypeGroupDao.createTable(db, ifNotExists);
        CategoryTypeDao.createTable(db, ifNotExists);
        CategoryDao.createTable(db, ifNotExists);
        TransactionsDao.createTable(db, ifNotExists);
        BudgetItemDao.createTable(db, ifNotExists);
        LocationDao.createTable(db, ifNotExists);
    }

    /** Drops underlying database table using DAOs. */
    public static void dropAllTables(SQLiteDatabase db, boolean ifExists) {
        BusinessObjectBaseDao.dropTable(db, ifExists);
        TagDao.dropTable(db, ifExists);
        TagInstanceDao.dropTable(db, ifExists);
        BankAccountBalanceDao.dropTable(db, ifExists);
        InstitutionDao.dropTable(db, ifExists);
        BankDao.dropTable(db, ifExists);
        BankAccountDao.dropTable(db, ifExists);
        AccountTypeDao.dropTable(db, ifExists);
        AccountTypeGroupDao.dropTable(db, ifExists);
        CategoryTypeDao.dropTable(db, ifExists);
        CategoryDao.dropTable(db, ifExists);
        TransactionsDao.dropTable(db, ifExists);
        BudgetItemDao.dropTable(db, ifExists);
        LocationDao.dropTable(db, ifExists);
    }

    public static abstract class OpenHelper extends SQLiteOpenHelper {

        public OpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db, false);
        }
    }

    /** WARNING: Drops all table on Upgrade! Use only during development. */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            dropAllTables(db, true);
            onCreate(db);
        }
    }

    public DaoMaster(SQLiteDatabase db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(BusinessObjectBaseDao.class);
        registerDaoClass(TagDao.class);
        registerDaoClass(TagInstanceDao.class);
        registerDaoClass(BankAccountBalanceDao.class);
        registerDaoClass(InstitutionDao.class);
        registerDaoClass(BankDao.class);
        registerDaoClass(BankAccountDao.class);
        registerDaoClass(AccountTypeDao.class);
        registerDaoClass(AccountTypeGroupDao.class);
        registerDaoClass(CategoryTypeDao.class);
        registerDaoClass(CategoryDao.class);
        registerDaoClass(TransactionsDao.class);
        registerDaoClass(BudgetItemDao.class);
        registerDaoClass(LocationDao.class);
    }

    public DaoSession newSession() {
        return new DaoSession(db, IdentityScopeType.Session, daoConfigMap);
    }

    public DaoSession newSession(IdentityScopeType type) {
        return new DaoSession(db, type, daoConfigMap);
    }

}
